/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Components.Lexical.FAGraphView;


import FALayout.CFAGraph;
import FALayout.CStateShape;
import GrammarNotions.RegExpr.CRE;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 * A component used to view NFA Graph.
 * It collaborates with Parser components.
 * 
 * @author Jackline Ssanyu (jssanyu@kyu.ac.ug)
 */
public class CFAGraphView extends javax.swing.JPanel implements PropertyChangeListener  {
   
   /**
     *
    */
    public CFAGraph tree;
    private CRE re;
    Rectangle rect;  

    /**
     * Creates new TreeGraghView object.
     */
    public CFAGraphView() { 
        super();
        this.setBackground(Color.white);
        tree=null;
        re=null;
        initComponents();
        initAddedComponents();
    }

    public CRE getRe() {
        return re;
    }

    public void setRe(CRE re) {
        this.re = re;
        Graphics g=drawingPanel.getGraphics();
        if(g!=null){
         paintComponent(g);
        }
    }

  
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        displayPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        HSlider = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        cmbStateStyle = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        VSlider = new javax.swing.JSlider();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        displayPanel.setBackground(new java.awt.Color(255, 255, 255));
        displayPanel.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout displayPanelLayout = new javax.swing.GroupLayout(displayPanel);
        displayPanel.setLayout(displayPanelLayout);
        displayPanelLayout.setHorizontalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        displayPanelLayout.setVerticalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 523, Short.MAX_VALUE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));

        HSlider.setPaintTicks(true);
        HSlider.setToolTipText("Horizontal tree spacing");
        HSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                HSliderStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("State Shape:");

        cmbStateStyle.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Circle", "Square" }));
        cmbStateStyle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStateStyleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbStateStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(HSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbStateStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(HSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));

        VSlider.setOrientation(javax.swing.JSlider.VERTICAL);
        VSlider.setPaintTicks(true);
        VSlider.setToolTipText("Vertical tree spacing");
        VSlider.setInverted(true);
        VSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                VSliderStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(VSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addComponent(VSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(displayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void VSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_VSliderStateChanged
        // TODO add your handling code here:
         tree.setvSpace(VSlider.getValue());
         Graphics g=drawingPanel.getGraphics();
         drawingPanel.paintComponent(g);
   
    }//GEN-LAST:event_VSliderStateChanged

    private void HSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_HSliderStateChanged
        // TODO add your handling code here:
         tree.setvSpace(HSlider.getValue());
         Graphics g=drawingPanel.getGraphics();
         drawingPanel.paintComponent(g);
    }//GEN-LAST:event_HSliderStateChanged

    private void cmbStateStyleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStateStyleActionPerformed
        // TODO add your handling code here:
         int i=cmbStateStyle.getSelectedIndex();
         if(i==0){
            tree.setStateShape(CStateShape.OVAL);
            Graphics g=drawingPanel.getGraphics();
            drawingPanel.paintComponent(g);
         }else if(i==1){
            tree.setStateShape(CStateShape.RECTANGLE);
            Graphics g=drawingPanel.getGraphics();
            drawingPanel.paintComponent(g);
         }
    }//GEN-LAST:event_cmbStateStyleActionPerformed
/* */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider HSlider;
    private javax.swing.JSlider VSlider;
    private javax.swing.JComboBox cmbStateStyle;
    private javax.swing.JPanel displayPanel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

     
    /**
     * Handles property change events. If the property change is from a component containing a node object, retrieves its node object, and updates its view. 
     * 
     * @param evt event object with the new value
     */
   @Override
    public void propertyChange(PropertyChangeEvent evt) {
        Object source=evt.getSource();
       /* if(source==NodeObject){
            CNode vNode=null;
            vNode=NodeObject.getNode();
            if(vNode!=null){
                //if(vNode instanceof CECFGNode){
                //    setNode(parseTreeGraph.ECFGNodetoTreeNode((CECFGNode)vNode));
               // }else 
                if(vNode instanceof CRE){
                    setTreeNode(reTreeGraph.RENodetoTreeNode((CRE)vNode)); 
                }//else if(vNode instanceof CNode){
                 //setNode(astTreeGraph.ASTNodetoTreeNode((CNode)vNode)); 
                
               // }else{
                JOptionPane.showMessageDialog(this,
                "Tree Graph View, This kind of tree not supported yet","Invalid Tree",
                 JOptionPane.ERROR_MESSAGE); 
                }
            }*/
        
    } 
    
    
    private DrawingPanel drawingPanel;

    /**
     *
     */
    
   
    private class DrawingPanel extends JPanel{
        public DrawingPanel(){
            
            setBackground(Color.white); // set the background color to white
            setPreferredSize(new Dimension(300, 200));

           
        }
        /**
         * Updates the TreeGraphView.
         */
        public void upDateSettings(){
          if(tree!=null){
            tree.sethSpace(HSlider.getValue());
            tree.setvSpace(VSlider.getValue());
            tree.setuSpace(25); 
            tree.setwSpace(55);  
            tree.setrSize(15);  
            if(cmbStateStyle.getSelectedIndex()==0){
                tree.setStateShape(CStateShape.OVAL);
            }else if(cmbStateStyle.getSelectedIndex()==1){
                tree.setStateShape(CStateShape.RECTANGLE);
            }
           }
        }
     /**
      * Draws the LLTreeGraphragh with the specified graphics object.
      * 
      * @param g the specified Graphics context. 
      */
        public void doDrawing(Graphics g) {
            // Update graphical view of FFAGraph 
            
            tree=new CFAGraph();
            if(re!=null){
            tree.setRe(re); 
            upDateSettings();
            tree.calculateLayout(g); 
            drawingPanel.setBounds(0,0,Math.max(100, tree.getWidth()+250),Math.max(100, tree.getHeight()+250));
            tree.draw(g);
            }
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            doDrawing(g);
            repaint();
        }
       @Override
        public Dimension getPreferredSize() {
            return new Dimension(300, 200);
        } 
    }
    private void initAddedComponents() {
        // place initialization code for panels here
        /*drawingPanel=new DrawingPanel();
        displayPanel.setSize(20, 20);

        JScrollPane scrollPane = new JScrollPane(drawingPanel);
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        displayPanel.setLayout(new BorderLayout());
        displayPanel.add(scrollPane);

        displayPanel.setVisible(true); */ 
        drawingPanel=new DrawingPanel();
        JScrollPane sp = new JScrollPane();
        sp.setViewportView(drawingPanel);
        displayPanel.setLayout(new BorderLayout());
        displayPanel.add(sp,BorderLayout.CENTER);
        displayPanel.setPreferredSize(new Dimension(100,100)); 
    }
    
    }
