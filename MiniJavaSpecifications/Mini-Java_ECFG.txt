[Lexemes]
Lower='a'-'z'
Upper='A'-'Z'
Letter=Lower|Upper
Digit='0'-'9'
RealDot='.'
Digits=Digit+.(RealDot.Digit+)?
Name=Letter.(Letter|Digit)*
PrimType="int"|"char"
RelOp= '<'|'>'|"<="|">="|"=="|"!="
Aop= '+'|'-'
Mop='*'|'/'

[Terminals]
class="class"
copen='{'
cend='}'
brkts="()"
while="while"
do="do"
if="if"
then="then"
else="else"
do="do"
equal='='
sc=';'
type=PrimType
num=Digits
void="void"
open='('
close=')'
rel=RelOp
Aop=Aop
Mop=Mop
id=Name
endmarker=$

[Nonterminals]
ClassDec=class.id.copen.FDecs.MDecs.cend
FDecs=type.id.sc.FDecs|type.id.sc
MDecs=void.id.brkts.copen.Stats.cend.MDecs|void.id.brkts.copen.Stats.cend
Stat=While|Assign|Repeat|If
Stats=Stat.Stats|Stat
While=while.Cond.copen.Stats.cend
Assign=id.equal.Exp.sc
If=if.Cond.copen.Stats.cend.else.copen.Stats.cend
Repeat=do.copen.Stats.cend.while.Cond
Cond=open.id.rel.num.close
Exp=Exp.Aop.Term|Term
Term=Term.Mop.Fact|Fact
Fact=id|open.Exp.close|num

[Start]
startexpr=ClassDec.endmarker
